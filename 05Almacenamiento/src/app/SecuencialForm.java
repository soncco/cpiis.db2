/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.taqque.almacenamiento.Atributo;
import org.taqque.almacenamiento.GestorAlmacenamiento;
import org.taqque.almacenamiento.GestorIOPagina;
import org.taqque.almacenamiento.GestorIORelacion;
import org.taqque.almacenamiento.IdentificadorPagina;
import org.taqque.almacenamiento.IdentificadorTupla;
import org.taqque.almacenamiento.Pagina;
import org.taqque.almacenamiento.Relacion;
import org.taqque.almacenamiento.Tupla;
import org.taqque.memoriaintermedia.GestorMemoriaIntermedia;

/**
 *
 * @author brau
 */
public class SecuencialForm extends javax.swing.JInternalFrame {

    public static String archivo = "d:/prueba/indexado.db";
    private DefaultTableModel theModel;
    private DefaultTableModel theTuplas;
    private List<Atributo> atributos;
    private Relacion relacion;
    private GestorMemoriaIntermedia gestorMemoria;
    private GestorAlmacenamiento gestorAlmacenamiento;
    private GestorIORelacion gestor;
    
    /**
     * Creates new form SecuencialForm
     */
    public SecuencialForm() {
        initComponents();
        setTypes();
        theModel = (DefaultTableModel) tabla.getModel();
        theTuplas = (DefaultTableModel) tuplas.getModel();
        atributos = new ArrayList<Atributo>();
    }
    
    private void setTypes() {
        TableColumn tipo = tabla.getColumnModel().getColumn(0);
        JComboBox combo = new JComboBox();
        combo.addItem("Integer");
        combo.addItem("String");        
        tipo.setCellEditor(new DefaultCellEditor(combo));
    }
    
    private Atributo getTipo(Object object) {
        String nombre = "";
        Class<? extends Comparable> tipo = null;
        if(object.equals("String")) {
            return new Atributo("string", String.class);
        } else if(object.equals("Integer")) {
            return new Atributo("integer", Integer.class);
        }
        return new Atributo(nombre, tipo);
    }
    
    private int posicionString(String texto) {
        String first = "a";
        int order = ordenarPor.getSelectedIndex();
        int index = 0;
        for(int j = 0; j < theTuplas.getRowCount(); j++) {
            if(theTuplas.getValueAt(j, order).toString().equals(texto))
                index = first.compareTo(texto);
        }
        return index;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buffer = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        panelIzquierda = new javax.swing.JPanel();
        scrollPanel = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        quitar = new javax.swing.JButton();
        agregar = new javax.swing.JButton();
        panelDerecha = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tuplas = new javax.swing.JTable();
        agregar1 = new javax.swing.JButton();
        quitar1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        guardar = new javax.swing.JButton();
        parse = new javax.swing.JButton();
        mostrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ordenarPor = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        buffer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        buffer.setSelectedIndex(1);

        jLabel1.setText("Tama√±o de buffer:");

        panelIzquierda.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelIzquierda.setToolTipText("Atributos");
        panelIzquierda.setName(""); // NOI18N

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo"
            }
        ));
        scrollPanel.setViewportView(tabla);

        jLabel2.setText("Atributos:");

        quitar.setText("-");
        quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarActionPerformed(evt);
            }
        });

        agregar.setText("+");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelIzquierdaLayout = new javax.swing.GroupLayout(panelIzquierda);
        panelIzquierda.setLayout(panelIzquierdaLayout);
        panelIzquierdaLayout.setHorizontalGroup(
            panelIzquierdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIzquierdaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIzquierdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIzquierdaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(agregar)
                .addGap(18, 18, 18)
                .addComponent(quitar)
                .addContainerGap())
        );
        panelIzquierdaLayout.setVerticalGroup(
            panelIzquierdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIzquierdaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIzquierdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar)
                    .addComponent(quitar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        panelDerecha.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Tuplas:");

        tuplas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tuplas);

        agregar1.setText("+");
        agregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar1ActionPerformed(evt);
            }
        });

        quitar1.setText("-");
        quitar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDerechaLayout = new javax.swing.GroupLayout(panelDerecha);
        panelDerecha.setLayout(panelDerechaLayout);
        panelDerechaLayout.setHorizontalGroup(
            panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDerechaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDerechaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDerechaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(agregar1)
                        .addGap(18, 18, 18)
                        .addComponent(quitar1)))
                .addContainerGap())
        );
        panelDerechaLayout.setVerticalGroup(
            panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDerechaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar1)
                    .addComponent(quitar1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        log.setColumns(20);
        log.setRows(5);
        jScrollPane2.setViewportView(log);

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        parse.setText(">");
        parse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseActionPerformed(evt);
            }
        });

        mostrar.setText("Mostrar orden");
        mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarActionPerformed(evt);
            }
        });

        jLabel4.setText("Ordenar por:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(guardar)
                        .addGap(10, 10, 10)
                        .addComponent(mostrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(panelIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(parse))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buffer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ordenarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panelDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buffer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(ordenarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panelDerecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelIzquierda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(parse)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar)
                    .addComponent(mostrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarActionPerformed
        int selected = tabla.getSelectedRow();
        if(selected >= 0) {
            theModel.removeRow(selected);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila");
        }
    }//GEN-LAST:event_quitarActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        theModel.addRow(new Object[2]);
    }//GEN-LAST:event_agregarActionPerformed

    private void parseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parseActionPerformed
        for(int i = 0; i < theModel.getRowCount(); i++) {
            theTuplas.addColumn(theModel.getValueAt(i, 0).toString());
            ordenarPor.addItem(theModel.getValueAt(i, 0).toString());
        }
    }//GEN-LAST:event_parseActionPerformed

    private void agregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar1ActionPerformed
        theTuplas.addRow(new Object[2]);
    }//GEN-LAST:event_agregar1ActionPerformed

    private void quitar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitar1ActionPerformed
        int selected = tuplas.getSelectedRow();
        if(selected >= 0) {
            theTuplas.removeRow(selected);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila");
        }
    }//GEN-LAST:event_quitar1ActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        gestorMemoria = new GestorMemoriaIntermedia(Integer.parseInt(buffer.getSelectedItem().toString()));
        gestorAlmacenamiento = new GestorAlmacenamiento(null, gestorMemoria);
        
        try {
            for(int i = 0; i < theModel.getRowCount(); i++) {
                atributos.add(getTipo(theModel.getValueAt(i, 0)));
            }
            relacion = new Relacion(atributos);
            gestorAlmacenamiento.crearArchivo(archivo);
            gestor = new GestorIORelacion(gestorAlmacenamiento, relacion, archivo);
            
            IdentificadorPagina id = new IdentificadorPagina(archivo, 0);
            Pagina pagina = new Pagina(relacion, id);
            
            log.append("Creando tuplas desordenadas: \n");
            for(int j = 0; j < theTuplas.getRowCount(); j++) {
                List<Comparable> v = new ArrayList<Comparable>();
                for(int k = 0; k < theTuplas.getColumnCount(); k++) {
                    if (theTuplas.getColumnName(k).equals("String")) {
                        v.add(new String(theTuplas.getValueAt(j, k).toString()));
                    } else if (theTuplas.getColumnName(k).equals("Integer")) {
                        v.add(new Integer(theTuplas.getValueAt(j, k).toString()));
                    }
                }
                int numero = 0;
                if(ordenarPor.getSelectedItem().toString().equals("Integer")) {
                    numero = Integer.parseInt(theTuplas.getValueAt(j, ordenarPor.getSelectedIndex()).toString());
                } else {
                    numero = posicionString(theTuplas.getValueAt(j, ordenarPor.getSelectedIndex()).toString());
                }
                
                IdentificadorTupla identificadorTupla = new IdentificadorTupla(archivo, numero);
                gestor.insertarTuplaOrdenada(v, identificadorTupla, pagina);
                Tupla t = new Tupla(identificadorTupla, v);
                log.append(t.toString() + "\n");                
            }
            
            RandomAccessFile archivoDB = new RandomAccessFile(archivo, "rw");
            GestorIOPagina.escribirPagina(archivoDB,pagina);
            archivoDB.close();
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
            e.printStackTrace(System.err);
        }
        
    }//GEN-LAST:event_guardarActionPerformed

    private void mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarActionPerformed
        log.append("\n\nMostrando tuplas ordenadas: \n");
        IdentificadorPagina idPagina = new IdentificadorPagina(archivo, 0);
        log.append(gestorAlmacenamiento.leerPagina(relacion,idPagina) + "\n");
    }//GEN-LAST:event_mostrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton agregar1;
    private javax.swing.JComboBox buffer;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea log;
    private javax.swing.JButton mostrar;
    private javax.swing.JComboBox ordenarPor;
    private javax.swing.JPanel panelDerecha;
    private javax.swing.JPanel panelIzquierda;
    private javax.swing.JButton parse;
    private javax.swing.JButton quitar;
    private javax.swing.JButton quitar1;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tuplas;
    // End of variables declaration//GEN-END:variables
}
