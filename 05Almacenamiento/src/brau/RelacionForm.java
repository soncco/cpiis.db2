/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package brau;

import java.io.FileNotFoundException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.taqque.almacenamiento.Atributo;
import org.taqque.memoriaintermedia.GestorMemoriaIntermedia;
import org.taqque.almacenamiento.GestorAlmacenamiento;
import org.taqque.almacenamiento.GestorIOPagina;
import org.taqque.almacenamiento.GestorIORelacion;
import org.taqque.almacenamiento.Pagina;
import org.taqque.almacenamiento.Relacion;

/**
 *
 * @author brau
 */
public class RelacionForm extends javax.swing.JInternalFrame {
    
    public static String archivo = "d:/prueba/relacion.db";
    private DefaultTableModel theModel;
    private List<Atributo> atributos;
    private Relacion relacion;
    private GestorMemoriaIntermedia gestorMemoria;
    private GestorAlmacenamiento gestorAlmacenamiento;
    private GestorIORelacion gestor;
    /**
     * Creates new form Relacion
     */
    public RelacionForm() {
        initComponents();
        setTypes();
        theModel = (DefaultTableModel) tabla.getModel();
        atributos = new ArrayList<Atributo>();
    }
    
    private void setTypes() {
        TableColumn tipo = tabla.getColumnModel().getColumn(0);
        JComboBox combo = new JComboBox();
        combo.addItem("Integer");
        combo.addItem("String");        
        tipo.setCellEditor(new DefaultCellEditor(combo));
    }
    
    private Atributo getTipo(Object object) {
        String nombre = "";
        Class<? extends Comparable> tipo = null;
        if(object.equals("String")) {
            return new Atributo("string", String.class);
        } else if(object.equals("Integer")) {
            return new Atributo("integer", Integer.class);
        }
        return new Atributo(nombre, tipo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buffer = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nroTuplas = new javax.swing.JTextField();
        scrollPanel = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        agregar = new javax.swing.JButton();
        quitar = new javax.swing.JButton();
        texto = new javax.swing.JTextField();
        insertar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        empezar = new javax.swing.JTextField();
        terminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        buffer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        buffer.setSelectedIndex(1);

        jLabel1.setText("Tamaño de buffer:");

        jLabel2.setText("Número de tuplas a insertar:");

        jLabel3.setText("Atributos:");

        jLabel4.setText("Texto:");

        nroTuplas.setText("120");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo"
            }
        ));
        scrollPanel.setViewportView(tabla);

        agregar.setText("Agregar fila");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        quitar.setText("Quitar fila");
        quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarActionPerformed(evt);
            }
        });

        texto.setText("12345678901234567890123456789012345678901234567890");
        texto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoActionPerformed(evt);
            }
        });

        insertar.setText("Insertar tuplas");
        insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarActionPerformed(evt);
            }
        });

        log.setColumns(20);
        log.setRows(5);
        jScrollPane2.setViewportView(log);

        jLabel5.setText("Empezar en:");

        empezar.setText("30");

        terminar.setText("Terminar");
        terminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buffer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nroTuplas, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(empezar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollPanel)
                            .addComponent(jLabel3)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(agregar)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quitar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(insertar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(terminar)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buffer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nroTuplas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(empezar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar)
                    .addComponent(quitar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertar)
                    .addComponent(terminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        theModel.addRow(new Object[2]);
    }//GEN-LAST:event_agregarActionPerformed

    private void quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarActionPerformed
        int selected = tabla.getSelectedRow();
        if(selected >= 0) {
            theModel.removeRow(selected);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila");
        }
    }//GEN-LAST:event_quitarActionPerformed

    private void textoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoActionPerformed

    private void insertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarActionPerformed
        gestorMemoria = new GestorMemoriaIntermedia(Integer.parseInt(buffer.getSelectedItem().toString()));
        gestorAlmacenamiento = new GestorAlmacenamiento(null, gestorMemoria);
        
        try {
            for(int i = 0; i < theModel.getRowCount(); i++) {
                atributos.add(getTipo(theModel.getValueAt(i, 0)));
            }
            relacion = new Relacion(atributos);
            gestorAlmacenamiento.crearArchivo(archivo);
            gestor = new GestorIORelacion(gestorAlmacenamiento, relacion, archivo);
            
            for(int j = 0; j < Integer.parseInt(nroTuplas.getText()); j++) {
                List<Comparable> v = new ArrayList<Comparable>();
                for(int k = 0; k < atributos.size(); k++) {
                    if(atributos.get(k).getNombre().equals("string")) {
                        v.add(texto.getText());
                    } else {
                        v.add(j+Integer.parseInt(empezar.getText()));
                    }
                }
                log.append("Insertando: " + v + "\n");
                gestor.insertarTupla(v);
            }
            log.append("Tuplas ingresadas correctamente \n");
            log.append("Buffer: " + gestorMemoria + "\n");
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
            e.printStackTrace(System.err);
        }
    }//GEN-LAST:event_insertarActionPerformed

    private void terminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminarActionPerformed
       for (int i = 0; i < Integer.parseInt(buffer.getSelectedItem().toString()); i++){
           try {
               Pagina descartada = gestorMemoria.getBuffer()[i].pagina;
               log.append(descartada + "\n");
               String nombreArchivo = descartada.getIdentificadorPagina().getNombreArchivo();
               RandomAccessFile archivoDB = new RandomAccessFile(nombreArchivo,"rw");
               GestorIOPagina.escribirPagina(archivoDB, descartada);
               archivoDB.close();
           } catch (Exception e) {
               System.out.println("Excepción: " + e.toString());
           }
        }
    }//GEN-LAST:event_terminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JComboBox buffer;
    private javax.swing.JTextField empezar;
    private javax.swing.JButton insertar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea log;
    private javax.swing.JTextField nroTuplas;
    private javax.swing.JButton quitar;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JTable tabla;
    private javax.swing.JButton terminar;
    private javax.swing.JTextField texto;
    // End of variables declaration//GEN-END:variables
}
